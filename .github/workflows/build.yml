name: Patch and Build

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ubuntu-latest
    env:
      GPG_PRIVATE_KEY: ${{ secrets.ONELITEFEATHER_GPG_KEY }}
      GPG_PASSPHRASE: ${{ secrets.ONELITEFEATHER_GPG_PASSWORD }}
      GITLAB_API_URL: ${{ secrets.GITLAB_API_URL }}
      GITLAB_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID }}
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITLAB_USERNAME: ${{ secrets.GITLAB_USERNAME }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configure Git User Details
        run: git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"
      - name: Apply Patches
        run: ./gradlew applyPatches
      - name: Build
        run: ./gradlew build
      - name: Publish API
        run: ./gradlew :onelitepaper-API:publishMavenPublicationToGitlabRepository
      - name: Publish DevBundle
        run: ./gradlew publishDevBundlePublicationToGitlabRepository -PpublishDevBundle
      - name: Generate PaperClip
        run: ./gradlew createReobfPaperclipJar
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: OneLitePaper Archive
          path: build/libs/OneLitePaper-paperclip-*.jar
